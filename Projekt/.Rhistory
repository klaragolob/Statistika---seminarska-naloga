hepl(read.csv)
help(read.csv)
data1 <- read.csv(file.choose, header=T)
data1 <- read.csv(file.choose(), header=T)
data1
dim(data)
data1[1:2,]
names(data1)
attach(data1)
mean(X.TIÅ½P)
mean(X.TIP)
mean(IZOBRAZBA)
summary(data1)
mean(data1$TIP)
mean(data1X.CLANOV)
mean(data1$X.CLANOV)
attach(data1)
mean(X.CLANOV)
t.test(data1, conf=0.95)
sample(data1)
sample(data1, size=200)
sample(data1, size=200, replace=FALSE
sample(data1, size=200)
sample(data1, size=200, replace=FALSE)
sample(data1, size=200, replace=T)
help(sample)
vzorec = sample(data1, size=200, replace=T)
mean(vzoprec)
summary(vzorec)
sum(vzorec)
vzorec = sample(data1, size=200, replace=T)
vzorec
sample(data1)
sample(sata1, size=2)
sample(data1, size=2)
data1
head(data1)
data1%X.OTROK.
data1
sample(data1)
# Enostavni slucajni vzorec 200 ljudi
vzorec <- data[sample(1:nrow(data), n),]
vzorec
vzorec
data1
print(vzorec)
vzorec
delez_V
data(gapminder)
data("gapminder")
N <- nrow(data1)  #stevilo vseh podatkov
n <- 200    #velikost vzorca
data("enostVzorec")
enostVzorec
median(ebostVzorec)
vzorec <- data[index,]
izobrazba_V <- vzorec$IZOBRAZBA
data1 <- read.table(Kibergrad.csv, header = TRUE, sep = ",")
data("data1")
N <- nrow(data1)  #stevilo vseh podatkov
n <- 200    #velikost vzorca
index <- sample(1:nrow(data), n)
vzorec <- data[index,]
# Enostavni slucajni vzorec 200 ljudi
vzorec <- data[sample(1:nrow(data), n),]
izobrazba_V <- vzorec$IZOBRAZBA
data1 <- read.table(Kibergrad.csv, header = TRUE, sep = ",")
setwd("~/Documents/FAKS/Statistika/11_sem_nal_Klara_Golob")
izobrazba_V <- vzorec$IZOBRAZBA
vzorec <- data[index]
izobrazba_V <- vzorec$IZOBRAZBA
izobrazba_V <- vzorec$IZOBRAZBA
setwd("~/Documents/FAKS/Statistika/11_sem_nal_Klara_Golob")
data1 <- read.table(Kibergrad.csv, header = TRUE, sep = ",")
N <- nrow(data1)  #stevilo vseh podatkov
n <- 200    #velikost vzorca
index <- sample(1:nrow(data), n)
vzorec <- data[index,]
# Enostavni slucajni vzorec 200 ljudi
vzorec <- data[sample(1:nrow(data), n),]
izobrazba_V <- vzorec$IZOBRAZBA
setwd("~/Documents/FAKS/Statistika/11_sem_nal_Klara_Golob")
data1 <- read.table(Kibergrad.csv, header = TRUE, sep = ",")
data1 <- read.table("Kibergrad.csv", header = TRUE, sep = ",")
N <- nrow(data1)  #stevilo vseh podatkov
n <- 200    #velikost vzorca
index <- sample(1:nrow(data), n)
data1 <- read.table("Kibergrad.csv", header = TRUE, sep = ",")
N <- nrow(data1)  #stevilo vseh podatkov
n <- 200    #velikost vzorca
index <- sample(1:nrow(data), n)
index <- sample(1:N, n)
vzorec <- data[index,]
vzorec <- data[index]
index <- sample(1:nrow(data), n)
n <- 200    #velikost vzorca
index <- sample(1:nrow(data1), n)
vzorec <- data[index,]
index <- sample(1:nrow(data1), n)
vzorec <- data1[index,]
# Enostavni slucajni vzorec 200 ljudi
vzorec <- data[sample(1:nrow(data), n),]
# Enostavni slucajni vzorec 200 ljudi
vzorec <- data[sample(1:nrow(data1), n),]
# Enostavni slucajni vzorec 200 ljudi
vzorec <- data1[sample(1:nrow(data1), n),]
izobrazba_V <- vzorec$IZOBRAZBA
delez_V <- length(izobrazba_V[izobrazba_V <= 38]) / n
delez_V
data1
# Enostavni slucajni vzorec 200 ljudi
vzorec <- data1[sample(1:nrow(data1), n),]
ste_otrok_V <- vzorec$OTROK
ste_otrok_V
st_otrok_V <- vzorec$OTROK
st_otrok_V
delez_V <- sum(st_otrok_V) / n
delez_V
index <- sample(1:nrow(data1), n)
vzorec <- data1[index,]
# Enostavni slucajni vzorec 200 ljudi
vzorec <- data1[sample(1:nrow(data1), n),]
st_otrok_vzorec <- vzorec$OTROK
povp_st_otrok_vzorec <- sum(st_otrok_V) / n
povp_st_otrok_vzorec
#b) Ocenite standardno napako in postavite 95% interval zaupanja.
napaka <- sqrt((povp_st_otrok_vzorec*(1-povp_st_otrok_vzorec)/n)*(-n)/(N-1)))
#b) Ocenite standardno napako in postavite 95% interval zaupanja.
napaka <- sqrt((povp_st_otrok_vzorec*(1-povp_st_otrok_vzorec)/n)*(-n)/(N-1))
povp_st_otrok_vzorec
#b) Ocenite standardno napako in postavite 95% interval zaupanja.
napaka <- sqrt((povp_st_otrok_vzorec*(1-povp_st_otrok_vzorec)/n)*(-n)/(N-1))
napaka
# Enostavni slucajni vzorec 200 ljudi
vzorec <- data1[sample(1:nrow(data1), n),]
st_otrok_vzorec <- vzorec$OTROK
povp_st_otrok <- sum(st_otrok_vzorec) / n
povp_st_otrok
#b) Ocenite standardno napako in postavite 95% interval zaupanja.
napaka_V <- sqrt((delez_V * (1 - delez_V) /  n) * (1 - (n - 1) / (N - 1)))
#b) Ocenite standardno napako in postavite 95% interval zaupanja.
napaka_V <- sqrt((povp_st_otrok * (1 - povp_st_otrok) /  n) * (1 - (n - 1) / (N - 1)))
napaka_V
#b) Ocenite standardno napako in postavite 95% interval zaupanja.
napaka <- sqrt((povp_st_otrok * (1 - povp_st_otrok) /  n) * (1 - (n - 1) / (N - 1)))
napaka
alfa = 0.05
koef = qnorm(1 - alfa / 2)
sp_meja <- povp_st_otrok - koef * napaka
zg_meja <- povp_st_otrok + koef * napaka
sp_meja
zg_meja
st_otrokP <- vzorec$OTROK
povp_st_otrokP <- sum(st_otrokP) / n
povp_st_otrokP
delezi_200 <- povp_st_otrok
for (i in 2:100) {
index_i <- sample(1:N, n)
vzorec_i <- datai[index_i,]
izobrazba_i <- vzorec_i$OTROK
delez_i <- sum(izobrazba_i) / n
delezi_200 <- c(delezi_200, delez_i)
}
delezi_200 <- povp_st_otrok
for (i in 2:100) {
index_i <- sample(1:N, n)
vzorec_i <- data1[index_i,]
izobrazba_i <- vzorec_i$OTROK
delez_i <- sum(izobrazba_i) / n
delezi_200 <- c(delezi_200, delez_i)
}
# Standardne napake za vseh 100 vzorcev
napaka_200 <- sqrt((delezi_200[1] * (1 - delezi_200[1]) /  n) * (1 - (n - 1) / (N - 1)))
for (i in 2:100) {
napaka_i <- sqrt((delezi_200[i] * (1 - delezi_200[i]) /  n) * (1 - (n - 1) / (N - 1)))
napaka_200 <- c(napaka_200, napaka_i)
}
# Spodnja meja za interval zaupanja
sp_meja_200 <- delezi_200[1] - koef * napaka_200[1]
for (i in 2:100) {
sp_i <- delezi_200[i] - koef * napaka_200[i]
sp_meja_200 <- c(sp_meja_200, sp_i)
}
# Zgornja meja za interval zaupanja
zg_meja_200 <- delezi_200[1] + koef * napaka_200[1]
for (i in 2:100) {
zg_i <- delezi_200[i] + koef * napaka_200[i]
zg_meja_200 <- c(zg_meja_200, zg_i)
}
# Zdruzimo podatke v tabelo
podatki_200 <- cbind(sp_meja_200, zg_meja_200)
pokritje_200 <- 0
for (i in 1:100) {
if (podatki_200[,1][i] < povp_st_otrokP && podatki_200[,2][i] > povp_st_otrokP) {
pokritje_200 <- pokritje_200 + 1
}
}
pokritje_200
delezi_200 <- povp_st_otrok
for (i in 2:100) {
index_i <- sample(1:N, n)
vzorec_i <- data1[index_i,]
izobrazba_i <- vzorec_i$OTROK
delez_i <- sum(izobrazba_i) / n
delezi_200 <- c(delezi_200, delez_i)
}
# Standardne napake za vseh 100 vzorcev
napaka_200 <- sqrt((delezi_200[1] * (1 - delezi_200[1]) /  n) * (1 - (n - 1) / (N - 1)))
for (i in 2:100) {
napaka_i <- sqrt((delezi_200[i] * (1 - delezi_200[i]) /  n) * (1 - (n - 1) / (N - 1)))
napaka_200 <- c(napaka_200, napaka_i)
}
# Spodnja meja za interval zaupanja
sp_meja_200 <- delezi_200[1] - koef * napaka_200[1]
for (i in 2:100) {
sp_i <- delezi_200[i] - koef * napaka_200[i]
sp_meja_200 <- c(sp_meja_200, sp_i)
}
# Zgornja meja za interval zaupanja
zg_meja_200 <- delezi_200[1] + koef * napaka_200[1]
for (i in 2:100) {
zg_i <- delezi_200[i] + koef * napaka_200[i]
zg_meja_200 <- c(zg_meja_200, zg_i)
}
# Zdruzimo podatke v tabelo
podatki_200 <- cbind(sp_meja_200, zg_meja_200)
pokritje_200 <- 0
for (i in 1:100) {
if (podatki_200[,1][i] < povp_st_otrokP && podatki_200[,2][i] > povp_st_otrokP) {
pokritje_200 <- pokritje_200 + 1
}
}
pokritje_200
pokritje_200 <- 0
# Zdruzimo podatke v tabelo
podatki_200 <- cbind(sp_meja_200, zg_meja_200)
pokritje_200 <- 0
for (i in 1:100) {
if (podatki_200[,1][i] < povp_st_otrokP && podatki_200[,2][i] > povp_st_otrokP) {
pokritje_200 <- pokritje_200 + 1
}
}
pokritje_200 <- 0
for (i in 1:100) {
if (podatki_200[,1][i] < povp_st_otrokP && podatki_200[,2][i]> povp_st_otrokP) {
pokritje_200 <- pokritje_200 + 1
}
}
pokritje_200 <- pokritje_200 + 1
if (podatki_200[,1][i] < povp_st_otrokP && podatki_200[,2][i] > povp_st_otrokP) {
pokritje_200 <- pokritje_200 + 1
}
for (i in 1:100) {
if (podatki_200[,1][i] < povp_st_otrokP && podatki_200[,2][i] > povp_st_otrokP) {
pokritje_200 <- pokritje_200 + 1
}
}
pokritje_200
koef
library(lattice)
library(plyr)
library(Rmisc)
library(gplots)
library(plotrix)
library(ggplot2)
setwd("~/Documents/FAKS/Statistika/11_sem_nal_Klara_Golob")
data1 <- read.table("Kibergrad.csv", header = TRUE, sep = ",")
N <- nrow(data1)  #stevilo vseh podatkov
n <- 200    #velikost vzorca
index <- sample(1:N, n)
vzorec <- data1[index,]
# Enostavni slucajni vzorec 200 ljudi
vzorec <- data1[sample(1:N, n),]
st_otrok_v <- vzorec$OTROK
povp_st_otrok <- mean(st_otrok_v)
povp_st_otrok
#b) Ocenite standardno napako in postavite 95% interval zaupanja.
napaka <- sqrt(sum(mapply(st_otrok_v,FUN =function(x) (povp_st_otrok-x)^2))*1/n^2*(1-n/N))
napaka
alfa = 0.05
koef = qnorm(1 - alfa / 2)
koef
